<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ =============================================================================
  ~
  ~   Copyright (c) 2011-2018, The THYMELEAF team (http://www.thymeleaf.org)
  ~
  ~   Licensed under the Apache License, Version 2.0 (the "License");
  ~   you may not use this file except in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~
  ~ =============================================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.thymeleaf</groupId>
    <artifactId>thymeleaf-parent</artifactId>
    <version>3.1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.thymeleaf</groupId>
  <artifactId>thymeleaf-lib</artifactId>
  <packaging>pom</packaging>
  <name>thymeleaf lib</name>

  <build>

    <resources>
      <resource>
        <directory>${project.basedir}/../..</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>LICENSE.txt</include>
          <include>NOTICE.txt</include>
        </includes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>javadoc-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>source-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <executions>
          <execution>
            <id>gpg-sign</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <executions>
          <execution>
            <!-- This is needed in order to allow Maven to release a project that is not in the root -->
            <!-- of a GitHub repository, but in a subfolder.                                         -->
            <id>release-perform</id>
            <goals>
              <goal>perform</goal>
            </goals>
            <configuration>
              <pomFileName>${project.artifactId}/pom.xml</pomFileName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- IMPORTANT: This plugin should always appear AFTER maven-release-plugin in this pom.xml -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!-- Copy javadoc's "element-list" file to "package-list" in order to allow projects    -->
          <!-- using versions of the javadoc tool < JDK9 to properly link to Thymeleaf's javadoc -->
          <!-- as an external link.                                                               -->
          <!-- NOTE this modifies the javadoc AFTER the creation of the jar as it is not possible -->
          <!-- to do so by previously configuring javadoc:javadoc in the prepare-package phase    -->
          <!-- because this "package-list" modification would trigger a second execution of the   -->
          <!-- javadoc tool in the javadoc:jar goal.                                              -->
          <execution>
            <id>copy-javadoc-element-list-to-package-list</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="copy javadocs element-list to package-list">
                <copy file="${project.build.directory}/apidocs/element-list" tofile="${project.build.directory}/apidocs/package-list" failonerror="false" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <modules>
    <module>thymeleaf</module>
    <module>thymeleaf-spring5</module>
    <module>thymeleaf-spring6</module>
  </modules>

</project>
